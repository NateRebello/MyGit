#!/usr/bin/env python3
# Saves files from index to repository 

import os
import sys
import shutil
import filecmp
def main():
    program_name = os.path.basename(sys.argv[0])
    args = sys.argv[1:]
    auto_add = "-a" in args
    if auto_add:
        args.remove("-a")
    if len(args) != 2 or args[0] != "-m":
        print(f"usage: {program_name} [-a] -m message", file=sys.stderr)
        sys.exit(1)
    message = args[1]
    
    if not os.path.exists(".mygit"):
        print(f"{program_name}: error: mygit repository directory .mygit not found", file=sys.stderr)
        sys.exit(1)
    
    with open(".mygit/HEAD", "r") as f:
        branch = f.read().strip()
    
    commits_dir = ".mygit/commits"
    existing_commits = [int(d) for d in os.listdir(commits_dir) if d.isdigit()] if os.path.exists(commits_dir) else []
    next_commit = max(existing_commits, default=-1) + 1
    
    index_dir = ".mygit/index"
    commit_dir = f".mygit/commits/{next_commit}"
    prev_commit_dir = f".mygit/commits/{next_commit - 1}" if next_commit > 0 else None
    if auto_add:
        for filename in os.listdir(index_dir):
            if os.path.exists(filename):
                shutil.copy2(filename, os.path.join(index_dir, filename))
    index_files = set(os.listdir(index_dir)) if os.path.exists(index_dir) else set()
    if prev_commit_dir and os.path.exists(prev_commit_dir):
        prev_commit_files = set(os.listdir(prev_commit_dir))
        if index_files == prev_commit_files:  
            all_same = True  
            for filename in index_files:  
                if not filecmp.cmp(
                    os.path.join(index_dir, filename),
                    os.path.join(prev_commit_dir, filename),
                    shallow=False
                ):
                    all_same = False
                    break
            if all_same:  
                print(f"nothing to commit", file=sys.stderr)
                sys.exit(1)
    elif not index_files and next_commit == 0: 
        print(f"nothing to commit", file=sys.stderr)
        sys.exit(1)
    
    os.mkdir(commit_dir)
    for filename in os.listdir(index_dir):
        shutil.copy2(os.path.join(index_dir, filename), os.path.join(commit_dir, filename))
    with open(".mygit/log", "a") as f:
        f.write(f"{next_commit} {message}\n")
    
    with open(f".mygit/branches/{branch}", "w") as f:
        f.write(f"{next_commit}\n")
    
    print(f"Committed as commit {next_commit}")
if __name__ == "__main__":
    main()